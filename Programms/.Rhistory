geom_text(aes(label=Tukey), position = position_dodge(0.90), size = 3,
vjust=-0.8, hjust=-0.5, colour = "gray25") +
ylim(0, 1500) +
geom_text(aes(label=Glass, y = 100), position = position_dodge(0.90), show.legend = FALSE)
# Customising colours
# coloured barplot
ggplot(data_summary, aes(x = factor(Temp), y = mean, fill = Glass, colour = Glass)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.5)  +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position = position_dodge(0.9), width = 0.25,
show.legend = FALSE) +
labs(x="Temperature (˚C)", y="Light Output") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.position = c(0.1, 0.75)) +
geom_text(aes(label=Tukey), position = position_dodge(0.90), size = 3,
vjust=-0.8, hjust=-0.5, colour = "gray25") +
ylim(0, 1500) +
geom_text(aes(label=Glass, y = 100), position = position_dodge(0.90), show.legend = FALSE) +
scale_fill_brewer(palette = "Dark2") +
scale_color_brewer(palette = "Dark2")
#Gray-scale
ggplot(data_summary, aes(x = factor(Temp), y = mean, fill = Glass)) +
geom_bar(stat = "identity", position = "dodge", alpha = 0.5, colour = "gray25")  +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position = position_dodge(0.9), width = 0.25,
show.legend = FALSE, colour = "gray25") +
labs(x="Temperature (˚C)", y="Light Output") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.position = c(0.1, 0.75)) +
geom_text(aes(label=Tukey), position = position_dodge(0.90), size = 3,
vjust=-0.8, hjust=-0.5, colour = "gray25") +
ylim(0, 1500) +
scale_fill_grey()
ggsave("barplot1.png", width = 4, height = 3, dpi = 1000)
# loading the appropriate libraries
library(readr)
library(ggplot2)
# loading and checking the data
data_summary <- read_csv('D:/R Programming/R_Programming/Data Sets/GTL_summary.csv')
print(data_summary)
# Basic scatterplot
ggplot(data_summary, aes(Temp, mean)) +
geom_point()
# Using colours and shapes to split the results
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass))
# Using colours and shapes to split the results
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass))
# Adding lines to connect the points
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass)) +
geom_line(aes(linetype = Glass))
# Avoiding the overlay of the data (position dodge)
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass), position=position_dodge(width=5)) +
geom_line(aes(linetype = Glass), position=position_dodge(width=5))
#Adding error bars
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass), position=position_dodge(width=5)) +
geom_line(aes(linetype = Glass), position=position_dodge(width=5)) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position=position_dodge(width=5))
#Now we are going to correct two details:
#The error bars are too wide, so we are going to define their width using width = 5.
#The legend on the right does not show the line type anymore (compare with the previous plot).
#This happens because a straight line for the legend of the error bars was added over it.
#We can use the argument show.legend = FALSE in the geom_errorbar() function to avoid it.
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass), position=position_dodge(width=5)) +
geom_line(aes(linetype = Glass), position=position_dodge(width=5)) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position=position_dodge(width=5),
width = 5, show.legend = FALSE)
#Customising the x and y titles
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass), position=position_dodge(width=5)) +
geom_line(aes(linetype = Glass), position=position_dodge(width=5)) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position=position_dodge(width=5),
width = 5, show.legend = FALSE) +
labs(x="Temperature (˚C)", y="Light Output")
#Customising the theme and legend position
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass), position=position_dodge(width=5)) +
geom_line(aes(linetype = Glass), position=position_dodge(width=5)) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position=position_dodge(width=5),
width = 5, show.legend = FALSE) +
labs(x="Temperature (˚C)", y="Light Output") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.position = c(0.1, 0.7))
#Adding the compact letter display
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass), position=position_dodge(width=5)) +
geom_line(aes(linetype = Glass), position=position_dodge(width=5)) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position=position_dodge(width=5),
width = 5, show.legend = FALSE) +
labs(x="Temperature (˚C)", y="Light Output") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.position = c(0.1, 0.7)) +
geom_text(aes(label=Tukey), size = 3,
position = position_dodge(width=5), vjust=1.5, show.legend = FALSE)
# Customising the x and y limits and axis breaks
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass), position=position_dodge(width=5)) +
geom_line(aes(linetype = Glass), position=position_dodge(width=5)) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position=position_dodge(width=5),
width = 5, show.legend = FALSE) +
labs(x="Temperature (˚C)", y="Light Output") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.position = c(0.1, 0.7)) +
geom_text(aes(label=Tukey), size = 3,
position = position_dodge(width=5), vjust=1.5, show.legend = FALSE) +
scale_x_continuous(breaks=c(100,125,150)) +
scale_y_continuous(limits=c(450, 1450), breaks=seq(500,1400,300))
# Improving the visualisation of the shapes
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass), position=position_dodge(width=5), alpha=0.4, size = 3) +
geom_line(aes(linetype = Glass), position=position_dodge(width=5)) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position=position_dodge(width=5),
width = 5, show.legend = FALSE) +
labs(x="Temperature (˚C)", y="Light Output") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.position = c(0.1, 0.7)) +
geom_text(aes(label=Tukey), size = 3,
position = position_dodge(width=5), vjust=1.5, show.legend = FALSE) +
scale_x_continuous(breaks=c(100,125,150)) +
scale_y_continuous(limits=c(450, 1450), breaks=seq(500,1400,300))
#Customising colours
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass), position=position_dodge(width=5), alpha=0.4, size = 3) +
geom_line(aes(linetype = Glass), position=position_dodge(width=5)) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position=position_dodge(width=5),
width = 5, show.legend = FALSE) +
labs(x="Temperature (˚C)", y="Light Output") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.position = c(0.1, 0.7)) +
geom_text(aes(label=Tukey), size = 3,
position = position_dodge(width=5), vjust=1.5, show.legend = FALSE) +
scale_x_continuous(breaks=c(100,125,150)) +
scale_y_continuous(limits=c(450, 1450), breaks=seq(500,1400,300)) +
scale_color_brewer(palette = "Dark2")
#Grey-scale plot
ggplot(data_summary, aes(Temp, mean, color = Glass)) +
geom_point(aes(shape = Glass), position=position_dodge(width=5), alpha=0.4, size = 3) +
geom_line(aes(linetype = Glass), position=position_dodge(width=5)) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), position=position_dodge(width=5),
width = 5, show.legend = FALSE) +
labs(x="Temperature (˚C)", y="Light Output") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(legend.position = c(0.1, 0.7)) +
geom_text(aes(label=Tukey), size = 3,
position = position_dodge(width=5), vjust=1.5, show.legend = FALSE) +
scale_x_continuous(breaks=c(100,125,150)) +
scale_y_continuous(limits=c(450, 1450), breaks=seq(500,1400,300)) +
scale_color_grey(start = 0.1, end = 0.3)
ggsave("scatterplot_1.png", width = 4, height = 2.5, dpi = 1000)
dev.off()
#-------------------------#
#Librariwa needed
library(datasets)
library(ggplot2)
library(multcompView)
library(dplyr)
#-------------------------#
str(chickwts)
write.csv(chickwts, "D:/R Programming/R_Programming/Data Sets/chickwts.csv", row.names = T)
## analysis of variance
anova <- aov(weight ~ feed, data = chickwts)
summary(anova)
## Tukey's test
tukey <- TukeyHSD(anova)
print(tukey)
## plot compact letter display
cld <- multcompLetters4(anova, tukey)
print(cld)
#-------------------------#
#Creating tables with letters
# table with factors and 3rd quantile
Tk <- group_by(chickwts, feed) %>%
summarise(mean=mean(weight), quant = quantile(weight, probs = 0.75)) %>%
arrange(desc(mean))
# extracting the compact letter display and adding to the Tk table
cld <- as.data.frame.list(cld$feed)
Tk$cld <- cld$Letters
print(Tk)
#Basic boxplot
ggplot(chickwts, aes(feed, weight)) +
geom_boxplot()
# Coustomize x and y titles
ggplot(chickwts, aes(feed, weight)) +
geom_boxplot() +
labs(x="Feed Type", y="Weight (g)")
#Coustomize overall visulization
# boxplot
ggplot(chickwts, aes(feed, weight)) +
geom_boxplot() +
labs(x="Feed Type", y="Weight (g)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# adding compact letter display from tukeys Test
ggplot(chickwts, aes(feed, weight)) +
geom_boxplot() +
labs(x="Feed Type", y="Weight (g)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_text(data = Tk, aes(x = feed, y = quant, label = cld))
#adjust letter so that we can easily view perfect
ggplot(chickwts, aes(feed, weight)) +
geom_boxplot() +
labs(x="Feed Type", y="Weight (g)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_text(data = Tk, aes(x = feed, y = quant, label = cld), size = 3, vjust=-1, hjust =-1)
# adding colors to box plots
ggplot(chickwts, aes(feed, weight)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(x="Feed Type", y="Weight (g)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_text(data = Tk, aes(x = feed, y = quant, label = cld), size = 3, vjust=-1, hjust =-1, color = "darkblue")
# colored according to the feed type or factors
ggplot(chickwts, aes(feed, weight)) +
geom_boxplot(aes(fill = feed)) +
labs(x="Feed Type", y="Weight (g)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_text(data = Tk, aes(x = feed, y = quant, label = cld), size = 3, vjust=-1, hjust =-1)
# hidden legend
ggplot(chickwts, aes(feed, weight)) +
geom_boxplot(aes(fill = feed), show.legend = FALSE) +
labs(x="Feed Type", y="Weight (g)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_text(data = Tk, aes(x = feed, y = quant, label = cld), size = 3, vjust=-1, hjust =-1) +
scale_fill_brewer(palette = "Pastel1")
# colored accorfing to median
ggplot(chickwts, aes(feed, weight)) +
geom_boxplot(aes(fill = factor(..middle..)), show.legend = FALSE) +
labs(x="Feed Type", y="Weight (g)") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
geom_text(data = Tk, aes(x = feed, y = quant, label = cld), size = 3, vjust=-1, hjust =-1) +
scale_fill_brewer(palette = "Blues")
ggsave("boxplot.png", width = 4, height = 3, dpi = 1000)
#Bar Plots for presenting three-factors
library(ggplot2)
library(ggthemes)
library(dplyr)
library(multcompView)
library(egg)
str(CO2)
head(CO2)
write.csv(CO2,"D:/R Programming/R_Programming/Data Sets/CO2.csv")
#Analysis and organisation of the data
CO2$Plant<-as.factor(CO2$Plant)
CO2$Type<-as.factor(CO2$Type)
CO2$Treatment<-as.factor(CO2$Treatment)
CO2$conc<-as.factor(CO2$conc)
CO2$uptake<-as.numeric(CO2$uptake)
# plot___________________________# Chawleen khudki
p <- ggplot(CO2, aes(x=Type, y=uptake, fill=conc)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal() +
theme(legend.position="top") +
labs(title="CO2 Uptake by Type and Concentration",
x="Type", y="Uptake",
fill="Concentration")
p
# plot___________________________# Chawleen khudki
p <- ggplot(CO2, aes(x=Type, y=uptake, fill=conc)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal() +
theme(legend.position="top") +
labs(title="CO2 Uptake by Type and Concentration",
x="Type", y="Uptake",
fill="Concentration")
p
str(CO2)
head(CO2)
# plot___________________________# Chawleen khudki
p <- ggplot(CO2, aes(x=Type, y=uptake, fill=conc)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal() +
theme(legend.position="top") +
labs(title="CO2 Uptake by Type and Concentration",
x="Type", y="Uptake",
fill="Concentration")
p
#_________________________________________________#
# Analysis and organisation of the data
anova <- aov(uptake ~ factor(conc)*Type*Treatment, data = CO2)
summary(anova)
# Tukey's test and compact letter display
Tukey <- TukeyHSD(anova)
cld <- multcompLetters4(anova, Tukey)
# Table with the mean, the standard deviation and the letters indications significant differences for each treatment
dt <- group_by(CO2, conc, Type, Treatment) %>%
summarise(uptake_mean=mean(uptake), sd=sd(uptake)) %>%
arrange(desc(uptake_mean))
cld <- as.data.frame.list(cld$`factor(conc):Type:Treatment`)
head(CO2)
str(CO2)
str(CO2)
str(CO2)
head(CO2)
#write.csv(CO2,"D:/R Programming/R_Programming/Data Sets/CO2.csv")
#Analysis and organisation of the data
CO2$Plant<-as.factor(CO2$Plant)
CO2$Type<-as.factor(CO2$Type)
CO2$Treatment<-as.factor(CO2$Treatment)
CO2$conc<-as.factor(CO2$conc)
CO2$uptake<-as.numeric(CO2$uptake)
# plot___________________________# Chawleen khudki
p <- ggplot(CO2, aes(x=Type, y=uptake, fill=conc)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal() +
theme(legend.position="top") +
labs(title="CO2 Uptake by Type and Concentration",
x="Type", y="Uptake",
fill="Concentration")
p
#_________________________________________________#
# Analysis and organisation of the data
anova <- aov(uptake ~ factor(conc)*Type*Treatment, data = CO2)
summary(anova)
# Tukey's test and compact letter display
Tukey <- TukeyHSD(anova)
cld <- multcompLetters4(anova, Tukey)
# Table with the mean, the standard deviation and the letters indications significant differences for each treatment
dt <- group_by(CO2, conc, Type, Treatment) %>%
summarise(uptake_mean=mean(uptake), sd=sd(uptake)) %>%
arrange(desc(uptake_mean))
cld <- as.data.frame.list(cld$`factor(conc):Type:Treatment`)
dt$Tukey <- cld$Letters
print(dt)
#Basic Barplot___________________________________#
ggplot(dt, aes(x = factor(conc), y = uptake_mean, fill = Type:Treatment)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymax = uptake_mean + sd, ymin = uptake_mean - sd),
position = position_dodge(0.9), width = 0.25, color = "Gray25") +
xlab(expression(CO[2]~Concentration~'('~mL~L^-1~')')) +
ylab(expression(CO[2]~Uptake~'('~µmol~m^2~s^-1~')')) +
scale_fill_brewer(palette = "Greens") +
theme_few()
# Spliting the visualisation into two plots_______________#
ggplot(dt, aes(x = factor(conc), y = uptake_mean, fill = Treatment)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymax = uptake_mean + sd, ymin = uptake_mean - sd),
position = position_dodge(0.9), width = 0.25, color = "Gray25") +
xlab(expression(CO[2]~Concentration~'('~mL~L^-1~')')) +
ylab(expression(CO[2]~Uptake~'('~µmol~m^2~s^-1~')')) +
scale_fill_brewer(palette = "Greens") +
theme_few() +
facet_grid(.~Type, labeller = label_both)
# barplot
ggplot(dt, aes(x = factor(conc), y = uptake_mean, fill = Treatment)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymax = uptake_mean + sd, ymin = uptake_mean - sd),
position = position_dodge(0.9), width = 0.25, color = "Gray25") +
xlab(expression(CO[2]~Concentration~'('~mL~L^-1~')')) +
ylab(expression(CO[2]~Uptake~'('~µmol~m^2~s^-1~')')) +
theme_few() +
theme(legend.position = c(0.58, 0.8)) +
scale_fill_brewer(palette = "Greens") +
facet_grid(.~Type, labeller = label_both) +
geom_text(aes(label=Tukey, y = uptake_mean + sd + 2), size = 3, color = "Gray25",
show.legend = FALSE,
position = position_dodge(0.9)) +
ylim(0,50)
# Relocating letters
p <- ggplot(dt, aes(x = factor(conc), y = uptake_mean, fill = Treatment)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymax = uptake_mean + sd, ymin = uptake_mean - sd),
position = position_dodge(0.9), width = 0.25, color = "Gray25") +
xlab(expression(CO[2]~Concentration~'('~mL~L^-1~')')) +
ylab(expression(CO[2]~Uptake~'('~µmol~m^2~s^-1~')')) +
theme_few() +
theme(legend.position = c(0.58, 0.76)) +
scale_fill_brewer(palette = "Greens") +
facet_grid(.~Type, labeller = label_both) +
geom_text(aes(label=Tukey, y = uptake_mean + sd + 2), size = 3, color = "Gray25",
show.legend = FALSE,
position = position_dodge(0.9)) +
ylim(0,50)
tag_facet(p)
# relocating the again formatting the letters
p <- ggplot(dt, aes(x = factor(conc), y = uptake_mean, fill = Treatment)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymax = uptake_mean + sd, ymin = uptake_mean - sd),
position = position_dodge(0.9), width = 0.25, color = "Gray25") +
xlab(expression(CO[2]~Concentration~'('~mL~L^-1~')')) +
ylab(expression(CO[2]~Uptake~'('~µmol~m^2~s^-1~')')) +
theme_few() +
theme(legend.position = c(0.58, 0.80)) +
theme(legend.title = element_blank()) +
scale_fill_manual(values = c("#C1D5A5", "#84A17C")) +
facet_grid(.~Type, labeller = label_both) +
geom_text(aes(label=Tukey, y = uptake_mean + sd + 2), size = 3, color = "Gray25",
show.legend = FALSE,
position = position_dodge(0.9)) +
ylim(0,50)
tag_facet(p, fontface = 1, tag_pool = c("(a) Quebec",
"(b) Mississipi"),
open = NULL, close = NULL, hjust = -0.05)
ggsave("CO2_barplot.png", width = 9, height = 3.5, dpi = 1000)
# loading the appropriate libraries
library(readr)
library(ggplot2)
library(multcompView)
library(dplyr)
# loading and checking the data
GTL <- read_csv("D:/R Programming/R_Programming/Data Sets/GTL.csv")
head(GTL)
str(GTL)
#Creating a simple plot for data visualisation
# building a simple plot for data visualisation
qplot(x = Temp, y = Light, geom = "point", data = GTL) +
facet_grid(.~Glass, labeller = label_both)
# Two-Way ANOVA Analysis of variance for two factors – Two-Way ANOVA
# creating a variable as factor for the ANOVA
GTL$Glass <- as.factor(GTL$Glass)
GTL$Temp_Factor <- as.factor(GTL$Temp)
# Two-Way ANOVA
# analysis of variance
anova <- aov(Light ~ Glass*Temp_Factor, data = GTL)
summary(anova)
#Creating a table with factors, means and standard deviation
# table with factors, means and standard deviation
data_summary <- group_by(GTL, Glass, Temp) %>%
summarise(mean=mean(Light), sd=sd(Light)) %>%
arrange(desc(mean))
print(data_summary)
#Comparing means by Tukey’s test
tukey <- TukeyHSD(anova)
print(tukey)
#Compact letter display to indicate significant differences
tukey.cld <- multcompLetters4(anova, tukey)
print(tukey.cld)
# adding the compact letter display to the table with means and sd
cld <- as.data.frame.list(tukey.cld$`Glass:Temp_Factor`)
data_summary$Tukey <- cld$Letters
print(data_summary)
write.csv("GTL_summary.csv")
# loading the appropriate libraries
library(ggplot2)
library(ggthemes)
library(multcompView)
library(dplyr)
#the standard deviation and the compact letter display
## The first step is to perform the analysis of variance, mostly known as ANOVA, using the aov function.
#Then the means comparison by Tukey’s test can be run on the object resulting from the analysis of variance.
#The use of letters to indicate significant differences in pairwise comparisons is called compact letter display,
#and can simplify the visualisation and discussion of significant differences among means. We are going to use the
#multcompLetters4 function from the multcompView package. The arguments are the object from an aov function and the object from the TukeyHSD function.
#Finally, we are going to build a table with the mean, the standard deviation and the letters for each treatment (feed).
#The data in this table will be use to build the barplot.
#________________________________________________________________________________________________________#
# analysis of variance
anova <- aov(weight ~ feed, data = chickwts)
# Tukey's test
tukey <- TukeyHSD(anova)
# compact letter display
cld <- multcompLetters4(anova, tukey)
# table with factors and 3rd quantile
dt <- group_by(chickwts, feed) %>%
summarise(w=mean(weight), sd = sd(weight)) %>%
arrange(desc(w))
# extracting the compact letter display and adding to the Tk table
cld <- as.data.frame.list(cld$feed)
dt$cld <- cld$Letters
print(dt)
# Barplot with error bars
ggplot(dt, aes(feed, w)) +
geom_bar(stat = "identity", aes(fill = w), show.legend = FALSE) +
geom_errorbar(aes(ymin = w-sd, ymax=w+sd), width = 0.2) +
labs(x = "Feed Type", y = "Average Weight Gain (g)") +
theme_few()
#Adding the letters indicating significant differences
ggplot(dt, aes(feed, w)) +
geom_bar(stat = "identity", aes(fill = w), show.legend = FALSE) +
geom_errorbar(aes(ymin = w-sd, ymax=w+sd), width = 0.2) +
labs(x = "Feed Type", y = "Average Weight Gain (g)") +
geom_text(aes(label = cld)) +
theme_few()
# Letter’s position: just above the bars and beside the error bars
ggplot(dt, aes(feed, w)) +
geom_bar(stat = "identity", aes(fill = w), show.legend = FALSE) +
geom_errorbar(aes(ymin = w-sd, ymax=w+sd), width = 0.2) +
labs(x = "Feed Type", y = "Average Weight Gain (g)") +
geom_text(aes(label = cld), vjust = -0.5, hjust = -0.5) +
theme_few()
# Letter’s position: just above the error bars
ggplot(dt, aes(feed, w)) +
geom_bar(stat = "identity", aes(fill = w), show.legend = FALSE) +
geom_errorbar(aes(ymin = w-sd, ymax=w+sd), width = 0.2) +
labs(x = "Feed Type", y = "Average Weight Gain (g)") +
geom_text(aes(label = cld, y = w + sd), vjust = -0.5) +
ylim(0,410) +
theme_few()
# Method 2
ggplot(dt, aes(feed, w)) +
geom_bar(stat = "identity", aes(fill = w), show.legend = FALSE) +
geom_errorbar(aes(ymin = w-sd, ymax=w+sd), width = 0.2) +
labs(x = "Feed Type", y = "Average Weight Gain (g)") +
geom_text(aes(label = cld, y = w + sd + 20)) +
ylim(0,410) +
theme_few()
ggsave("barplot.png", width = 4.2, height = 3, dpi = 1000)# could not find Copyggplot, install
